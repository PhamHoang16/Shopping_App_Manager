Index: app/src/main/java/com/example/manager/activity/DangKyActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.manager.activity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.example.manager.R;\r\nimport com.example.manager.retrofit.ApiBanHang;\r\nimport com.example.manager.retrofit.RetrofitClient;\r\nimport com.example.manager.utils.Utils;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\n\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport io.reactivex.rxjava3.disposables.CompositeDisposable;\r\nimport io.reactivex.rxjava3.schedulers.Schedulers;\r\n\r\npublic class DangKyActivity extends AppCompatActivity {\r\n    EditText email, password, reenterpass, username, mobile;\r\n    AppCompatButton button;\r\n    ApiBanHang apiBanHang;\r\n    FirebaseAuth firebaseAuth;\r\n    CompositeDisposable compositeDisposable = new CompositeDisposable();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_dang_ky);\r\n        initView();\r\n        initControl();\r\n    }\r\n\r\n    private void initControl() {\r\n        button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                signUp();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void signUp() {\r\n        String str_email = email.getText().toString().trim();\r\n        String str_pass = password.getText().toString().trim();\r\n        String str_repass = reenterpass.getText().toString().trim();\r\n        String str_username = username.getText().toString().trim();\r\n        String str_mobile = mobile.getText().toString().trim();\r\n        if (TextUtils.isEmpty(str_email)) {\r\n            Toast.makeText(getApplicationContext(), \"Bạn chưa nhập Email!\", Toast.LENGTH_LONG).show();\r\n        } else if (TextUtils.isEmpty(str_pass)) {\r\n            Toast.makeText(getApplicationContext(), \"Bạn chưa nhập mật khẩu!\", Toast.LENGTH_LONG).show();\r\n        } else if (TextUtils.isEmpty(str_repass)) {\r\n            Toast.makeText(getApplicationContext(), \"Bạn chưa nhập lại mật khẩu!\", Toast.LENGTH_LONG).show();\r\n        } else if (TextUtils.isEmpty(str_username)) {\r\n            Toast.makeText(getApplicationContext(), \"Bạn chưa nhập username!\", Toast.LENGTH_LONG).show();\r\n        } else if (TextUtils.isEmpty(str_mobile)) {\r\n            Toast.makeText(getApplicationContext(), \"Bạn chưa nhập số điện thoại!\", Toast.LENGTH_LONG).show();\r\n        } else {\r\n            if (str_pass.equals(str_repass)) {\r\n                firebaseAuth = FirebaseAuth.getInstance();\r\n                firebaseAuth.createUserWithEmailAndPassword(str_email, str_pass)\r\n                        .addOnCompleteListener(DangKyActivity.this, new OnCompleteListener<AuthResult>() {\r\n                            @Override\r\n                            public void onComplete(@NonNull Task<AuthResult> task) {\r\n                                if (task.isSuccessful()) {\r\n                                    FirebaseUser firebaseUser = firebaseAuth.getCurrentUser();\r\n                                    if (firebaseUser != null) {\r\n                                        postData(str_email, str_pass, str_username, str_mobile, firebaseUser.getUid());\r\n                                    }\r\n                                } else {\r\n                                    Toast.makeText(getApplicationContext(), \"Email đã tồn tại\", Toast.LENGTH_SHORT).show();;\r\n                                }\r\n                            }\r\n                        });\r\n            } else {\r\n                Toast.makeText(getApplicationContext(), \"Mật khẩu chưa đúng!\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void postData(String str_email, String str_pass, String str_username, String str_mobile, String uid) {\r\n        compositeDisposable.add(apiBanHang.dangky(str_email, str_pass, str_username, str_mobile, uid)\r\n                .subscribeOn(Schedulers.io())\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribe(\r\n                        userModel -> {\r\n                            if (userModel.isSuccess()) {\r\n                                Toast.makeText(getApplicationContext(), \"Đăng ký thành công!\", Toast.LENGTH_LONG).show();\r\n                                Utils.user_current.setEmail(str_email);\r\n                                Utils.user_current.setPassword(str_pass);\r\n                                Intent intent = new Intent(getApplicationContext(), DangNhapActivity.class);\r\n                                startActivity(intent);\r\n                                finish();\r\n                            } else {\r\n                                Toast.makeText(getApplicationContext(), userModel.getMessage(), Toast.LENGTH_LONG).show();\r\n                            }\r\n                        },\r\n                        throwable -> {\r\n                            Toast.makeText(getApplicationContext(), throwable.getMessage(), Toast.LENGTH_LONG).show();\r\n                        }\r\n                ));\r\n    }\r\n    private void initView() {\r\n        apiBanHang = RetrofitClient.getInstance(Utils.BASE_URL).create(ApiBanHang.class);\r\n        email = findViewById(R.id.email);\r\n        password = findViewById(R.id.pass);\r\n        reenterpass = findViewById(R.id.reenterpass);\r\n        username = findViewById(R.id.username);\r\n        mobile = findViewById(R.id.mobile);\r\n        button = findViewById(R.id.btndangky);\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        compositeDisposable.clear();\r\n        super.onDestroy();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/manager/activity/DangKyActivity.java b/app/src/main/java/com/example/manager/activity/DangKyActivity.java
--- a/app/src/main/java/com/example/manager/activity/DangKyActivity.java	(revision 9f4e20abce8a4172a35c5a41afee5a5a4acbc68d)
+++ b/app/src/main/java/com/example/manager/activity/DangKyActivity.java	(date 1682260479006)
@@ -56,15 +56,15 @@
         String str_username = username.getText().toString().trim();
         String str_mobile = mobile.getText().toString().trim();
         if (TextUtils.isEmpty(str_email)) {
-            Toast.makeText(getApplicationContext(), "Bạn chưa nhập Email!", Toast.LENGTH_LONG).show();
+            Toast.makeText(getApplicationContext(), "Bạn chưa nhập Email!", Toast.LENGTH_SHORT).show();
         } else if (TextUtils.isEmpty(str_pass)) {
-            Toast.makeText(getApplicationContext(), "Bạn chưa nhập mật khẩu!", Toast.LENGTH_LONG).show();
+            Toast.makeText(getApplicationContext(), "Bạn chưa nhập mật khẩu!", Toast.LENGTH_SHORT).show();
         } else if (TextUtils.isEmpty(str_repass)) {
-            Toast.makeText(getApplicationContext(), "Bạn chưa nhập lại mật khẩu!", Toast.LENGTH_LONG).show();
+            Toast.makeText(getApplicationContext(), "Bạn chưa nhập lại mật khẩu!", Toast.LENGTH_SHORT).show();
         } else if (TextUtils.isEmpty(str_username)) {
-            Toast.makeText(getApplicationContext(), "Bạn chưa nhập username!", Toast.LENGTH_LONG).show();
+            Toast.makeText(getApplicationContext(), "Bạn chưa nhập username!", Toast.LENGTH_SHORT).show();
         } else if (TextUtils.isEmpty(str_mobile)) {
-            Toast.makeText(getApplicationContext(), "Bạn chưa nhập số điện thoại!", Toast.LENGTH_LONG).show();
+            Toast.makeText(getApplicationContext(), "Bạn chưa nhập số điện thoại!", Toast.LENGTH_SHORT).show();
         } else {
             if (str_pass.equals(str_repass)) {
                 firebaseAuth = FirebaseAuth.getInstance();
@@ -78,7 +78,7 @@
                                         postData(str_email, str_pass, str_username, str_mobile, firebaseUser.getUid());
                                     }
                                 } else {
-                                    Toast.makeText(getApplicationContext(), "Email đã tồn tại", Toast.LENGTH_SHORT).show();;
+                                    Toast.makeText(getApplicationContext(), "This email has been used!@", Toast.LENGTH_SHORT).show();;
                                 }
                             }
                         });
@@ -95,18 +95,18 @@
                 .subscribe(
                         userModel -> {
                             if (userModel.isSuccess()) {
-                                Toast.makeText(getApplicationContext(), "Đăng ký thành công!", Toast.LENGTH_LONG).show();
+                                Toast.makeText(getApplicationContext(), "Đăng ký thành công!", Toast.LENGTH_SHORT).show();
                                 Utils.user_current.setEmail(str_email);
                                 Utils.user_current.setPassword(str_pass);
                                 Intent intent = new Intent(getApplicationContext(), DangNhapActivity.class);
                                 startActivity(intent);
                                 finish();
                             } else {
-                                Toast.makeText(getApplicationContext(), userModel.getMessage(), Toast.LENGTH_LONG).show();
+                                Toast.makeText(getApplicationContext(), userModel.getMessage(), Toast.LENGTH_SHORT).show();
                             }
                         },
                         throwable -> {
-                            Toast.makeText(getApplicationContext(), throwable.getMessage(), Toast.LENGTH_LONG).show();
+                            Toast.makeText(getApplicationContext(), throwable.getMessage(), Toast.LENGTH_SHORT).show();
                         }
                 ));
     }
Index: .idea/shelf/Uncommitted_changes_before_Update_at_19_04_2023_10_22_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_2023_10_22_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_2023_10_22_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_2023_10_22_PM_[Changes]/shelved.patch	(revision 9f4e20abce8a4172a35c5a41afee5a5a4acbc68d)
+++ /dev/null	(revision 9f4e20abce8a4172a35c5a41afee5a5a4acbc68d)
@@ -1,46 +0,0 @@
-Index: app/src/main/java/com/example/manager/utils/Utils.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.manager.utils;\r\n\r\nimport com.example.manager.model.GioHang;\r\nimport com.example.manager.model.User;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Utils {\r\n    // Nhớ đổi sang IPv4 của WIFI đang dùng !!!\r\n    public static final String BASE_URL = \"http:/192.168.1.7/tikitakadb/\";\r\n    public static List<GioHang> arr_giohang;\r\n    public static List<GioHang> arr_muahang = new ArrayList<>();\r\n    public static User user_current = new User();\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/manager/utils/Utils.java b/app/src/main/java/com/example/manager/utils/Utils.java
---- a/app/src/main/java/com/example/manager/utils/Utils.java	(revision 293b7dba364a4c2b1c1069712d6f79d4fcf559ac)
-+++ b/app/src/main/java/com/example/manager/utils/Utils.java	(date 1681784014928)
-@@ -8,7 +8,7 @@
- 
- public class Utils {
-     // Nhớ đổi sang IPv4 của WIFI đang dùng !!!
--    public static final String BASE_URL = "http:/192.168.1.7/tikitakadb/";
-+    public static final String BASE_URL = "http://10.90.77.17/tikitakadb/";
-     public static List<GioHang> arr_giohang;
-     public static List<GioHang> arr_muahang = new ArrayList<>();
-     public static User user_current = new User();
-Index: app/src/main/java/com/example/manager/activity/ThemSPActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.manager.activity;\r\n\r\nimport android.content.Intent;\r\nimport android.database.Cursor;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Spinner;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.manager.R;\r\nimport com.example.manager.databinding.ActivityThemspBinding;\r\nimport com.example.manager.model.MessageModel;\r\nimport com.example.manager.retrofit.ApiBanHang;\r\nimport com.example.manager.retrofit.RetrofitClient;\r\nimport com.example.manager.utils.Utils;\r\nimport com.github.dhaval2404.imagepicker.ImagePicker;\r\n\r\nimport java.io.File;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport io.reactivex.rxjava3.disposables.CompositeDisposable;\r\nimport io.reactivex.rxjava3.schedulers.Schedulers;\r\nimport okhttp3.MediaType;\r\nimport okhttp3.MultipartBody;\r\nimport okhttp3.RequestBody;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class ThemSPActivity extends AppCompatActivity {\r\n    Spinner spinner;\r\n    int type = 0;\r\n    ActivityThemspBinding binding;\r\n    ApiBanHang apiBanHang;\r\n    CompositeDisposable compositeDisposable = new CompositeDisposable();\r\n    String mediaPath;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityThemspBinding.inflate(getLayoutInflater());\r\n        apiBanHang = RetrofitClient.getInstance(Utils.BASE_URL).create(ApiBanHang.class);\r\n        setContentView(binding.getRoot());\r\n        initView();\r\n        initData();\r\n    }\r\n\r\n    private void initData() {\r\n        List<String> typeList = new ArrayList<>();\r\n        typeList.add(\"Loại sản phẩm\");\r\n        typeList.add(\"Giày\");\r\n        typeList.add(\"Quần áo\");\r\n        typeList.add(\"Phụ kiện\");\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_dropdown_item, typeList);\r\n        spinner.setAdapter(adapter);\r\n        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                type = position;\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n        binding.btnThemsp.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                themSanpham();\r\n            }\r\n        });\r\n        binding.imgcamera.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                ImagePicker.with(ThemSPActivity.this)\r\n                        .crop()\t    \t\t\t//Crop image(Optional), Check Customization for more option\r\n                        .compress(1024)\t\t\t//Final image size will be less than 1 MB(Optional)\r\n                        .maxResultSize(1080, 1080)\t//Final image resolution will be less than 1080 x 1080(Optional)\r\n                        .start();\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        mediaPath = data.getDataString();\r\n        uploadMultipleFiles();\r\n        Log.d(\"log\", \"onActivityResult: \" + mediaPath);\r\n    }\r\n\r\n    private void themSanpham() {\r\n        String str_tensp = binding.tensp.getText().toString().trim();\r\n        String str_giasp = binding.giasp.getText().toString().trim();\r\n        String str_hinhanh = binding.hinhanh.getText().toString().trim();\r\n        String str_mota = binding.mota.getText().toString().trim();\r\n        if (TextUtils.isEmpty(str_tensp) || TextUtils.isEmpty(str_giasp) ||\r\n                TextUtils.isEmpty(str_mota) || TextUtils.isEmpty(str_hinhanh) || type == 0) {\r\n            Toast.makeText(getApplicationContext(), \"Vui lòng nhập đủ thông tin\", Toast.LENGTH_LONG).show();\r\n\r\n        } else {\r\n            compositeDisposable.add(apiBanHang.addProduct(str_tensp, str_giasp, str_hinhanh, str_mota, type)\r\n                    .subscribeOn(Schedulers.io())\r\n                    .observeOn(AndroidSchedulers.mainThread())\r\n                    .subscribe(\r\n                            messageModel -> {\r\n                                if (messageModel.isSuccess()) {\r\n                                    Toast.makeText(getApplicationContext(), messageModel.getMessage(), Toast.LENGTH_LONG).show();\r\n                                } else {\r\n                                    Toast.makeText(getApplicationContext(), messageModel.getMessage(), Toast.LENGTH_LONG).show();\r\n                                }\r\n\r\n\r\n                            },\r\n                            throwable -> {\r\n                                Toast.makeText(getApplicationContext(), throwable.getMessage(), Toast.LENGTH_LONG).show();\r\n\r\n                            }\r\n                    ));\r\n\r\n        }\r\n    }\r\n\r\n    private String getPath(Uri uri) {\r\n        String result;\r\n        Cursor cursor = getContentResolver().query(uri, null, null, null, null);\r\n        if (cursor == null) {\r\n            result = uri.getPath();\r\n        } else {\r\n            cursor.moveToFirst();\r\n            int index = cursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA);\r\n            result = cursor.getString(index);\r\n            cursor.close();\r\n        }\r\n        return result;\r\n    }\r\n\r\n        private void uploadMultipleFiles() {\r\n            Uri uri = Uri.parse(mediaPath);\r\n\r\n            File file = new File(getPath(uri));\r\n            RequestBody requestBody = RequestBody.create(MediaType.parse(\"*/*\"), file);\r\n            MultipartBody.Part fileToUpload = MultipartBody.Part.createFormData(\"file\", file.getName(), requestBody);\r\n            Call<MessageModel> call = apiBanHang.uploadFile(fileToUpload);\r\n            call.enqueue(new Callback< MessageModel >() {\r\n                @Override\r\n                public void onResponse(Call < MessageModel > call, Response< MessageModel > response) {\r\n                    MessageModel serverResponse = response.body();\r\n                    if (serverResponse != null) {\r\n                        if (serverResponse.isSuccess()) {\r\n                            binding.hinhanh.setText(serverResponse.getName());\r\n                        } else {\r\n                            Toast.makeText(getApplicationContext(), serverResponse.getMessage(), Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    } else {\r\n                        assert serverResponse != null;\r\n                        Log.v(\"Response\", serverResponse.toString());\r\n                    }\r\n                }\r\n                @Override\r\n                public void onFailure(Call < MessageModel > call, Throwable t) {\r\n                    Log.d(\"log\", t.getMessage());\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    private void initView() {\r\n        spinner = findViewById(R.id.spinner_loai);\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        compositeDisposable.clear();\r\n        super.onDestroy();\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/manager/activity/ThemSPActivity.java b/app/src/main/java/com/example/manager/activity/ThemSPActivity.java
---- a/app/src/main/java/com/example/manager/activity/ThemSPActivity.java	(revision 293b7dba364a4c2b1c1069712d6f79d4fcf559ac)
-+++ b/app/src/main/java/com/example/manager/activity/ThemSPActivity.java	(date 1681785776572)
-@@ -27,6 +27,7 @@
- import java.io.File;
- import java.util.ArrayList;
- import java.util.List;
-+import java.util.Objects;
- 
- import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
- import io.reactivex.rxjava3.disposables.CompositeDisposable;
-@@ -164,7 +165,7 @@
-                             Toast.makeText(getApplicationContext(), serverResponse.getMessage(), Toast.LENGTH_SHORT).show();
-                         }
-                     } else {
--                        assert serverResponse != null;
-+                        //assert serverResponse != null;
-                         Log.v("Response", serverResponse.toString());
-                     }
-                 }
Index: .idea/shelf/Uncommitted_changes_before_Update_at_19_04_2023_10_22_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_2023_10_22_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_2023_10_22_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_2023_10_22_PM__Changes_.xml	(revision 9f4e20abce8a4172a35c5a41afee5a5a4acbc68d)
+++ /dev/null	(revision 9f4e20abce8a4172a35c5a41afee5a5a4acbc68d)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_19_04_2023_10_22_PM_[Changes]" date="1681917789528" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_2023_10_22_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 19/04/2023 10:22 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: app/src/main/java/com/example/manager/retrofit/ApiBanHang.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.manager.retrofit;\r\n\r\nimport com.example.manager.model.MessageModel;\r\nimport com.example.manager.model.NewProductModel;\r\nimport com.example.manager.model.OrderModel;\r\nimport com.example.manager.model.ProductCategoryModel;\r\nimport com.example.manager.model.UserModel;\r\n\r\nimport io.reactivex.rxjava3.core.Observable;\r\nimport okhttp3.MultipartBody;\r\nimport okhttp3.RequestBody;\r\nimport retrofit2.Call;\r\nimport retrofit2.http.Field;\r\nimport retrofit2.http.FormUrlEncoded;\r\nimport retrofit2.http.GET;\r\nimport retrofit2.http.Multipart;\r\nimport retrofit2.http.POST;\r\nimport retrofit2.http.Part;\r\n\r\npublic interface ApiBanHang {\r\n    @GET(\"getProduct.php\")\r\n    Observable<ProductCategoryModel> getProductCategory();\r\n\r\n    @GET(\"getNewProduct.php\")\r\n    Observable<NewProductModel> getNewProduct();\r\n\r\n    @POST(\"chitiet.php\")\r\n    @FormUrlEncoded\r\n    Observable<NewProductModel> getProduct(\r\n            @Field(\"page\") int page,\r\n            @Field(\"type\") int type\r\n\r\n    );\r\n\r\n    @POST(\"signup.php\")\r\n    @FormUrlEncoded\r\n    Observable<UserModel> dangky(\r\n            @Field(\"email\") String email,\r\n            @Field(\"password\") String pass,\r\n            @Field(\"username\") String name,\r\n            @Field(\"mobile\") String mobile,\r\n            @Field(\"uid\") String uid\r\n\r\n    );\r\n\r\n    @POST(\"signin.php\")\r\n    @FormUrlEncoded\r\n    Observable<UserModel> dangnhap(\r\n            @Field(\"email\") String email,\r\n            @Field(\"password\") String pass\r\n    );\r\n\r\n    @POST(\"send_link.php\")\r\n    @FormUrlEncoded\r\n    Observable<UserModel> resetPass(\r\n            @Field(\"email\") String email\r\n    );\r\n\r\n    @POST(\"order.php\")\r\n    @FormUrlEncoded\r\n    Observable<UserModel> createOrder(\r\n            @Field(\"email\") String email,\r\n            @Field(\"mobile\") String mobile,\r\n            @Field(\"total_price\") String total_price,\r\n            @Field(\"user_id\") int user_id,\r\n            @Field(\"address\") String address,\r\n            @Field(\"num\") int num,\r\n            @Field(\"detail\") String detail\r\n    );\r\n\r\n    @POST(\"order_records.php\")\r\n    @FormUrlEncoded\r\n    Observable<OrderModel> viewOrder(\r\n            @Field(\"user_id\") int user_id\r\n    );\r\n\r\n    @POST(\"search.php\")\r\n    @FormUrlEncoded\r\n    Observable<NewProductModel> search(\r\n            @Field(\"search\") String search\r\n    );\r\n\r\n    @POST(\"delete.php\")\r\n    @FormUrlEncoded\r\n    Observable<MessageModel> xoaSanpham(\r\n            @Field(\"id\") int id\r\n    );\r\n\r\n\r\n    @POST(\"themsp.php\")\r\n    @FormUrlEncoded\r\n    Observable<MessageModel> addProduct(\r\n            @Field(\"name\") String name,\r\n            @Field(\"price\") String price,\r\n            @Field(\"picture\") String picture,\r\n            @Field(\"description\") String description,\r\n            @Field(\"type\") int type\r\n    );\r\n\r\n    @POST(\"updateSp.php\")\r\n    @FormUrlEncoded\r\n    Observable<MessageModel> updateProduct(\r\n            @Field(\"name\") String name,\r\n            @Field(\"price\") String price,\r\n            @Field(\"picture\") String picture,\r\n            @Field(\"description\") String description,\r\n            @Field(\"type\") int type,\r\n            @Field(\"id\") int id\r\n    );\r\n\r\n    @POST(\"updatetoken.php\")\r\n    @FormUrlEncoded\r\n    Observable<MessageModel> updateToken(\r\n            @Field(\"id\") int id,\r\n            @Field(\"token\") String token\r\n    );\r\n\r\n    @Multipart\r\n    @POST(\"uploadImage.php\")\r\n    Call<MessageModel> uploadFile(@Part MultipartBody.Part file);\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/manager/retrofit/ApiBanHang.java b/app/src/main/java/com/example/manager/retrofit/ApiBanHang.java
--- a/app/src/main/java/com/example/manager/retrofit/ApiBanHang.java	(revision 9f4e20abce8a4172a35c5a41afee5a5a4acbc68d)
+++ b/app/src/main/java/com/example/manager/retrofit/ApiBanHang.java	(date 1682347566662)
@@ -36,7 +36,7 @@
     @FormUrlEncoded
     Observable<UserModel> dangky(
             @Field("email") String email,
-            @Field("password") String pass,
+            @Field("password") String password,
             @Field("username") String name,
             @Field("mobile") String mobile,
             @Field("uid") String uid
@@ -47,7 +47,7 @@
     @FormUrlEncoded
     Observable<UserModel> dangnhap(
             @Field("email") String email,
-            @Field("password") String pass
+            @Field("password") String password
     );
 
     @POST("send_link.php")
Index: app/src/main/java/com/example/manager/utils/Utils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.manager.utils;\r\n\r\nimport com.example.manager.model.GioHang;\r\nimport com.example.manager.model.User;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Utils {\r\n    // Nhớ đổi sang IPv4 của WIFI đang dùng !!!\r\n    public static final String BASE_URL = \"http://192.168.1.7/tikitakadb/\";\r\n    public static List<GioHang> arr_giohang;\r\n    public static List<GioHang> arr_muahang = new ArrayList<>();\r\n    public static User user_current = new User();\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/manager/utils/Utils.java b/app/src/main/java/com/example/manager/utils/Utils.java
--- a/app/src/main/java/com/example/manager/utils/Utils.java	(revision 9f4e20abce8a4172a35c5a41afee5a5a4acbc68d)
+++ b/app/src/main/java/com/example/manager/utils/Utils.java	(date 1682258528703)
@@ -8,7 +8,7 @@
 
 public class Utils {
     // Nhớ đổi sang IPv4 của WIFI đang dùng !!!
-    public static final String BASE_URL = "http://192.168.1.7/tikitakadb/";
+    public static final String BASE_URL = "http://192.168.68.109/tikitakadb/";
     public static List<GioHang> arr_giohang;
     public static List<GioHang> arr_muahang = new ArrayList<>();
     public static User user_current = new User();
