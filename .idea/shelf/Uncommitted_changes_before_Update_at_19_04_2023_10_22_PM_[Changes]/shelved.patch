Index: app/src/main/java/com/example/manager/utils/Utils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.manager.utils;\r\n\r\nimport com.example.manager.model.GioHang;\r\nimport com.example.manager.model.User;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Utils {\r\n    // Nhớ đổi sang IPv4 của WIFI đang dùng !!!\r\n    public static final String BASE_URL = \"http:/192.168.1.7/tikitakadb/\";\r\n    public static List<GioHang> arr_giohang;\r\n    public static List<GioHang> arr_muahang = new ArrayList<>();\r\n    public static User user_current = new User();\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/manager/utils/Utils.java b/app/src/main/java/com/example/manager/utils/Utils.java
--- a/app/src/main/java/com/example/manager/utils/Utils.java	(revision 293b7dba364a4c2b1c1069712d6f79d4fcf559ac)
+++ b/app/src/main/java/com/example/manager/utils/Utils.java	(date 1681784014928)
@@ -8,7 +8,7 @@
 
 public class Utils {
     // Nhớ đổi sang IPv4 của WIFI đang dùng !!!
-    public static final String BASE_URL = "http:/192.168.1.7/tikitakadb/";
+    public static final String BASE_URL = "http://10.90.77.17/tikitakadb/";
     public static List<GioHang> arr_giohang;
     public static List<GioHang> arr_muahang = new ArrayList<>();
     public static User user_current = new User();
Index: app/src/main/java/com/example/manager/activity/ThemSPActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.manager.activity;\r\n\r\nimport android.content.Intent;\r\nimport android.database.Cursor;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Spinner;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.manager.R;\r\nimport com.example.manager.databinding.ActivityThemspBinding;\r\nimport com.example.manager.model.MessageModel;\r\nimport com.example.manager.retrofit.ApiBanHang;\r\nimport com.example.manager.retrofit.RetrofitClient;\r\nimport com.example.manager.utils.Utils;\r\nimport com.github.dhaval2404.imagepicker.ImagePicker;\r\n\r\nimport java.io.File;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport io.reactivex.rxjava3.disposables.CompositeDisposable;\r\nimport io.reactivex.rxjava3.schedulers.Schedulers;\r\nimport okhttp3.MediaType;\r\nimport okhttp3.MultipartBody;\r\nimport okhttp3.RequestBody;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class ThemSPActivity extends AppCompatActivity {\r\n    Spinner spinner;\r\n    int type = 0;\r\n    ActivityThemspBinding binding;\r\n    ApiBanHang apiBanHang;\r\n    CompositeDisposable compositeDisposable = new CompositeDisposable();\r\n    String mediaPath;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityThemspBinding.inflate(getLayoutInflater());\r\n        apiBanHang = RetrofitClient.getInstance(Utils.BASE_URL).create(ApiBanHang.class);\r\n        setContentView(binding.getRoot());\r\n        initView();\r\n        initData();\r\n    }\r\n\r\n    private void initData() {\r\n        List<String> typeList = new ArrayList<>();\r\n        typeList.add(\"Loại sản phẩm\");\r\n        typeList.add(\"Giày\");\r\n        typeList.add(\"Quần áo\");\r\n        typeList.add(\"Phụ kiện\");\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_dropdown_item, typeList);\r\n        spinner.setAdapter(adapter);\r\n        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                type = position;\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n        binding.btnThemsp.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                themSanpham();\r\n            }\r\n        });\r\n        binding.imgcamera.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                ImagePicker.with(ThemSPActivity.this)\r\n                        .crop()\t    \t\t\t//Crop image(Optional), Check Customization for more option\r\n                        .compress(1024)\t\t\t//Final image size will be less than 1 MB(Optional)\r\n                        .maxResultSize(1080, 1080)\t//Final image resolution will be less than 1080 x 1080(Optional)\r\n                        .start();\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        mediaPath = data.getDataString();\r\n        uploadMultipleFiles();\r\n        Log.d(\"log\", \"onActivityResult: \" + mediaPath);\r\n    }\r\n\r\n    private void themSanpham() {\r\n        String str_tensp = binding.tensp.getText().toString().trim();\r\n        String str_giasp = binding.giasp.getText().toString().trim();\r\n        String str_hinhanh = binding.hinhanh.getText().toString().trim();\r\n        String str_mota = binding.mota.getText().toString().trim();\r\n        if (TextUtils.isEmpty(str_tensp) || TextUtils.isEmpty(str_giasp) ||\r\n                TextUtils.isEmpty(str_mota) || TextUtils.isEmpty(str_hinhanh) || type == 0) {\r\n            Toast.makeText(getApplicationContext(), \"Vui lòng nhập đủ thông tin\", Toast.LENGTH_LONG).show();\r\n\r\n        } else {\r\n            compositeDisposable.add(apiBanHang.addProduct(str_tensp, str_giasp, str_hinhanh, str_mota, type)\r\n                    .subscribeOn(Schedulers.io())\r\n                    .observeOn(AndroidSchedulers.mainThread())\r\n                    .subscribe(\r\n                            messageModel -> {\r\n                                if (messageModel.isSuccess()) {\r\n                                    Toast.makeText(getApplicationContext(), messageModel.getMessage(), Toast.LENGTH_LONG).show();\r\n                                } else {\r\n                                    Toast.makeText(getApplicationContext(), messageModel.getMessage(), Toast.LENGTH_LONG).show();\r\n                                }\r\n\r\n\r\n                            },\r\n                            throwable -> {\r\n                                Toast.makeText(getApplicationContext(), throwable.getMessage(), Toast.LENGTH_LONG).show();\r\n\r\n                            }\r\n                    ));\r\n\r\n        }\r\n    }\r\n\r\n    private String getPath(Uri uri) {\r\n        String result;\r\n        Cursor cursor = getContentResolver().query(uri, null, null, null, null);\r\n        if (cursor == null) {\r\n            result = uri.getPath();\r\n        } else {\r\n            cursor.moveToFirst();\r\n            int index = cursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA);\r\n            result = cursor.getString(index);\r\n            cursor.close();\r\n        }\r\n        return result;\r\n    }\r\n\r\n        private void uploadMultipleFiles() {\r\n            Uri uri = Uri.parse(mediaPath);\r\n\r\n            File file = new File(getPath(uri));\r\n            RequestBody requestBody = RequestBody.create(MediaType.parse(\"*/*\"), file);\r\n            MultipartBody.Part fileToUpload = MultipartBody.Part.createFormData(\"file\", file.getName(), requestBody);\r\n            Call<MessageModel> call = apiBanHang.uploadFile(fileToUpload);\r\n            call.enqueue(new Callback< MessageModel >() {\r\n                @Override\r\n                public void onResponse(Call < MessageModel > call, Response< MessageModel > response) {\r\n                    MessageModel serverResponse = response.body();\r\n                    if (serverResponse != null) {\r\n                        if (serverResponse.isSuccess()) {\r\n                            binding.hinhanh.setText(serverResponse.getName());\r\n                        } else {\r\n                            Toast.makeText(getApplicationContext(), serverResponse.getMessage(), Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    } else {\r\n                        assert serverResponse != null;\r\n                        Log.v(\"Response\", serverResponse.toString());\r\n                    }\r\n                }\r\n                @Override\r\n                public void onFailure(Call < MessageModel > call, Throwable t) {\r\n                    Log.d(\"log\", t.getMessage());\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    private void initView() {\r\n        spinner = findViewById(R.id.spinner_loai);\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        compositeDisposable.clear();\r\n        super.onDestroy();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/manager/activity/ThemSPActivity.java b/app/src/main/java/com/example/manager/activity/ThemSPActivity.java
--- a/app/src/main/java/com/example/manager/activity/ThemSPActivity.java	(revision 293b7dba364a4c2b1c1069712d6f79d4fcf559ac)
+++ b/app/src/main/java/com/example/manager/activity/ThemSPActivity.java	(date 1681785776572)
@@ -27,6 +27,7 @@
 import java.io.File;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Objects;
 
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
 import io.reactivex.rxjava3.disposables.CompositeDisposable;
@@ -164,7 +165,7 @@
                             Toast.makeText(getApplicationContext(), serverResponse.getMessage(), Toast.LENGTH_SHORT).show();
                         }
                     } else {
-                        assert serverResponse != null;
+                        //assert serverResponse != null;
                         Log.v("Response", serverResponse.toString());
                     }
                 }
